# Reference: <https://postmarketos.org/vendorkernel>
# Kernel config based on: arch/arm64/configs/pinenote_defconfig

pkgname=linux-olimex-teres_i
pkgver="6.1.71" # LTS
pkgrel=0
pkgdesc="Custom Linux Kernel for OLIMEX Teres-I"
arch="aarch64"
_carch="arm64"
_flavor="${pkgname#linux-}"
url="https://kernel.org"
license="GPL-2.0-only"
options="!strip !check !tracedeps
	pmb:cross-native
	pmb:kconfigcheck-community
	pmb:kconfigcheck-uefi"
makedepends="bison findutils flex installkernel openssl-dev perl ed"

source="
	$pkgname-$pkgver.tar.xz::https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-$pkgver.tar.xz
"
# shellcheck disable=SC2154 # srcdir is pre-defined
builddir="$srcdir/linux-$pkgver"

prepare() {
	default_prepare

	kernelAdd() { printf "CONFIG_%s\\n" "$@" >> .config ;}

	# Tiny Kernel Configuration - Kernel that just boots in the OS with:
	# * UART
	# * Display
	# * Terminal
	# * WiFi
	# * BLE
	# * Battery charging and gauge
	kernelAdd "ARCH_SUNXI=y" # Sunxi
	# FIXME(Krey): EMBEDDED should be set by ARCH_SUNXI
	kernelAdd "EMBEDDED=y" # For Embedded
	kernelAdd "MODULES=y" # Enable kernel modules
	## WiFi
	# FIXME(Krey): This is stupid it should automatically enable all dependencies if RTL8723BS is set
	# NOTE(Krey): might need rtlwifi
	kernelAdd RTL8723BS=m \
		NETDEVICES=y \
		NET=y \
		WIRELESS=y \
		WLAN=y \
		MMC=y \
		CFG80211=y \
		STAGING=y # Support for RTL8723 WiFi
	## BLE
	# ...
	## Display
	kernelAdd DRM_SUN4I=y
	kernelAdd DRM_ANALOGIX_ANX6345=m \
		DRM_ANALOGIX_DP=y \
		DRM=y \
		DRM_BRIDGE=y \
		FB=y \
		DRM_SIMPLEDRM=y \
		SYSFB_SIMPLEFB=y \
		DRM_PANEL_EDP=y \
		DRM_KOMEDA=y \
		DRM_MALI_DISPLAY=y \
		DRM_PANEL_OLIMEX_LCD_OLINUXINO=y # Display in userland
	kernelAdd DRM_LIMA=y # Hardware Acceleration
	kernelAdd FRAMEBUFFER_CONSOLE=y\
		DRM_FB_CMA=y # Display in u-boot
	kernelAdd "MEDIA_SUPPORT=y" \
		VIDEOBUF2_VMALLOC=y \
		VIDEOBUF2_CORE=y \
		VIDEOBUF2_MEMOPS=y \
		VIDEOBUF2_V4L2=y # unsure, device loads it in the userland as module
	# kernelAll "ARM_SUN8I_A33_MBUS_DEVFREQ=y" # Loaded in userland no idea why A33 is there

	# kernelAdd "VIDEO_SUN8I_ROTATE=y" \
	# 	"MEDIA_SUPPORT=y" \
	# 	"MEDIA_PLATFORM_SUPPORT=y" \
	# 	"MEDIA_PLATFORM_DRIVERS=y" \
	# 	"V4L_MEM2MEM_DRIVERS=y" \
	# 	"VIDEO_DEV=y" \
	# 	"VIDEOBUF2_DMA_CONTIG=y" # Not sure what this is, but the device loads it as a module in the userland
	# Sound
	# kernelAdd "SOUND=y" \
	# 	"SND_SUN50I_CODEC_ANALOG=y" \
	# 	"SND=y" \
	# 	"SND_SOC=y" \
	# 	"SND_SUN8I_ADDA_PR_REGMAP=y" \
	# 	"SND_SUN8I_CODEC=y"
	## Battery
	kernelAdd BATTERY_AXP20X=m \
		POWER_SUPPLY=y \
		MFD_AXP20X=y \
		AXP20X_ADC=y \
		IIO=y \
		MFD_AXP20X_I2C=y \
		I2C=y \
		PINCTRL_AXP209=y \
		INPUT_AXP20X_PEK=y \
		INPUT_MISC=y # Battery
	## PostmarketOS
	kernelAdd CGROUPS=y
	kernelAdd INPUT_EVDEV=y # Event interface
	kernelAdd EXT2_FS=y # pmos uses that for boot sometimes
	kernelAdd SYSVIPC=y # System V IPC
	kernelAdd TMPFS_POSIX_ACL=y # Tmpfs POSIX Access Control Lists, unsure why it's needed
	kernelAdd UEVENT_HELPER=y # uevent helper, unsure
	kernelAdd USER_NS=y \
		NAMESPACES=y # User Namespaces
	kernelAdd INPUT_UINPUT=y # User level driver support
	kernelAdd LEDS_TRIGGER_TIMER=y \
		NEW_LEDS=y \
		LEDS_TRIGGERS=y \
		LEDS_CLASS=y # LED Timer Trigger, no ide if it's needed are there even any LEDs that the kernel can control on teres? afaik it's all in uboot
	kernelAdd NETFILTER_XT_MATCH_TCPMSS=y NETFILTER_XT_TARGET_TCPMSS=y \
		INET=y \
		NETFILTER=y \
		NETFILTER_XTABLES=y \
		NETFILTER_ADVANCED=y # tcpmss match and target support, no idea
	## UEFI
	kernelAdd EFI=y \
		EFI_VARS_PSTORE=y \
		PSTORE=y \
			MISC_FILESYSTEMS=y \
		EFI_STUB=y \
		DMI=y \
		EFI_ESRT=y \
		EFI_PARAMS_FROM_FDT=y \
		EFI_RUNTIME_WRAPPERS=y \
		EFI_GENERIC_STUB=y
	## TTY
	kernelAdd TTY=y \
		VT=y
	## Crypto
	kernelAdd CRYPTO=y \
		CRYPTO_AES=y \
		CRYPTO_XTS=y
	kernelAdd DM_CRYPT=y \
		MD=y \
		BLK_DEV_DM=y # Crypt target support
	## Kernel
	kernelAdd DEVTMPFS=y DEVTMPFS_MOUNT=y # Maintain devtmpfs filesystem to mount at /dev
	## IPV6
	kernelAdd IPV6=y
	## Filesystems
	kernelAdd EXT4_FS=y # EXT4
	kernelAdd BTRFS_FS=y # BTRFS
	kernelAdd CONFIG_EXFAT_FS=n # EXFAT
	kernelAdd CONFIG_F2FS_FS=y # F2FS, needed for uefi?
	## IWD
	# FIXME(Krey): needs to be checked for dependencies
	kernelAdd \
		CRYPTO_AES=y \
		CRYPTO_CMAC=y \
		CRYPTO_ECB=y \
		CRYPTO_MD5=y \
		CRYPTO_SHA256=y \
		CRYPTO_USER_API_HASH=y \
		KEYS=y \
		PKCS7_MESSAGE_PARSER=y \
		X509_CERTIFICATE_PARSER=y \
		PKCS8_PRIVATE_KEY_PARSER=y \
		KEY_DH_OPERATIONS=y \
		CRYPTO_USER_API_SKCIPHER=y \
		CRYPTO_SHA512=y \
		CRYPTO_SHA1=y \
		CRYPTO_HMAC=y \
		CRYPTO_DES=y
	## TMPFS
	kernelAdd TMPFS=y \
	## Virtualization
	# kernelAdd KVM=y \
	# 	VIRTUALIZATION=y
	## Netboot
	# NOTE(Krey): Commented out as i am not aware of we needing this for teres
	# kernelAdd BLK_DEV_NBD=y \
	# 	BLK_DEV=y \
	# 	NET=y # Network block device support
	# nftables
	# FIXME(Krey): Adjust for IPv6 support (not everyone might want that)
	kernelAdd NF_TABLES=y \
		NETFILTER=y \
		NF_CONNTRACK=y \
		NFT_CT=y \
		NFT_LOG=y \
		NFT_LIMIT=y \
		NFT_MASQ=y \
		NFT_NAT=y \
		NF_TABLES_IPV4=y \
		NF_REJECT_IPV4=y \
		IP_NF_IPTABLES=y \
		IP_NF_FILTER=y \
		IP_NF_TARGET_REJECT=y \
		IP_NF_NAT=y \
		NF_TABLES_IPV6=y \
		NF_REJECT_IPV6=y \
		IP6_NF_IPTABLES=y \
		IP6_NF_FILTER=y \
		IP6_NF_TARGET_REJECT=y \
		IP6_NF_NAT=y \
		NF_TABLES_INET=y \
		NFT_REJECT=y
	## Wireguard
	# FIXME(Krey): Needs to be checked for dependencies + conditional for ipv6
	# kernelAdd CONFIG_WIREGUARD=y \
	# 	CONFIG_IP_ADVANCED_ROUTER=y \
	# 	CONFIG_IP_MULTIPLE_TABLES=y \
	# 	CONFIG_IPV6_MULTIPLE_TABLES=y \
	# 	CONFIG_NF_TABLES=y \
	# 	CONFIG_NFT_CT=y \
	# 	CONFIG_NFT_FIB=y \
	# 	CONFIG_NFT_FIB_IPV4=y \
	# 	CONFIG_NFT_FIB_IPV6=y \
	# 	CONFIG_NF_CONNTRACK_MARK=y
	## SWAP
	kernelAdd SWAP=y
	## ZRAM
	kernelAdd ZRAM=y \
		ZSMALLOC=y \
		CRYPTO_LZ4=y \
			CRYPTO=y \
		LZ4_COMPRESS=y
	## Misc
	kernelAdd USB_GADGET=y \
		USB_SUPPORT=y \
		USB_CONFIGFS=y \
		USB_CONFIGFS_RNDIS=y # USB Gadgets
	# FIXME(Krey): If IKCONFIG_PROC is set then it should set IKCONFIG as well
	kernelAdd IKCONFIG_PROC=y \
		IKCONFIG=y # Provide /proc/config.gz with kernel config
	kernelAdd WERROR=y # Treat warnings as errors
	kernelAdd LOCALVERSION=teres_i # Set Local Version (suffix after kernel version)
	kernelAdd PREEMPT=y # Set low-latency desktop as preempt
	kernelAdd BLK_DEV_INITRD=y # Support for initrd

	# echo "CONFIG_XEN=y" >> .config # Xen support, wanted?
	# echo "CONFIG_SUSPEND=y" >> .config # Enable suspend, needed?
	# echo "CONFIG_HIBERNATE=y" >> .config # Enable hibernation, needed?

	# printf '%s\n' 'g/# CONFIG_RTL8723BS is not set/s/^# CONFIG_RTL8723BS is not set/CONFIG_RTL8723BS=m/' w q | ed -s .config # Add RTL8723BS module
	# echo "CONFIG_DRM_ANALOGIX_ANX6345=m" >> .config # Add Driver for the display (ANX6345)

	echo "The Config is:"
	cat .config

	# FIXME(Krey): Convert on kernel modules where possible
	make ARCH="$_carch" CC="${CC:-gcc}" yes2modconfig # Convert everything to modules
}

build() {
	unset LDFLAGS
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-$_flavor"
}

package() {
	# shellcheck disable=SC2154 # pkgdir is pre-defined
	mkdir -p "$pkgdir/boot"

	install -Dm644 "$builddir/arch/$_carch/boot/Image" \
		"$pkgdir/boot/vmlinuz"

	make modules_install dtbs_install \
		ARCH="$_carch" \
		INSTALL_PATH="$pkgdir/boot/" \
		INSTALL_MOD_PATH="$pkgdir" \
		INSTALL_MOD_STRIP=1 \
		INSTALL_DTBS_PATH="$pkgdir/boot/dtbs"
	rm -f "$pkgdir"/lib/modules/*/build "$pkgdir"/lib/modules/*/source

	install -D "$builddir"/include/config/kernel.release \
		"$pkgdir/usr/share/kernel/$_flavor/kernel.release"
}

sha512sums="
ae0633231fb88c68406944a73e751e4d6409f60e342d6ca32d6b84a70eae9ce52dbb2a50e60947ec52fef7ef00ad6ffa31361482341f2e3c0cc84815ac405ad5  linux-olimex-teres_i-6.1.71.tar.xz
"
